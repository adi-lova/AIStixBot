from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from bot.keyboards.filters import style_keyboard, background_keyboard, quantity_keyboard
from bot.services.colab_integration import generate_sticker

router = Router()


@router.message(lambda message: message.text.lower() in ["–∞–Ω–∏–º–µ", "—Ä–µ–∞–ª–∏–∑–º", "—á–∏–±–∏"])
async def select_style(message: types.Message, state: FSMContext):
    await state.update_data(style=message.text.lower())
    await message.answer("–í—ã–±–µ—Ä–∏ —Ñ–æ–Ω:", reply_markup=background_keyboard())


@router.message(lambda message: message.text.lower() in ["—Å —Ñ–æ–Ω–æ–º", "–±–µ–∑ —Ñ–æ–Ω–∞"])
async def select_background(message: types.Message, state: FSMContext):
    await state.update_data(background=message.text.lower())
    await message.answer("–°–∫–æ–ª—å–∫–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?", reply_markup=quantity_keyboard())


@router.message(lambda message: message.text.isdigit())
async def select_quantity(message: types.Message, state: FSMContext):
    await state.update_data(quantity=int(message.text))
    await message.answer("–û–ø–∏—à–∏, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Å—Ç–∏–∫–µ—Ä–µ:")


@router.message()
async def generate(message: types.Message, state: FSMContext):
    data = await state.get_data()

    style = data.get("style", "–∞–Ω–∏–º–µ")
    background = data.get("background", "—Å —Ñ–æ–Ω–æ–º")
    quantity = data.get("quantity", 1)
    prompt = message.text

    await message.answer("üß† –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å—Ç–∏–∫–µ—Ä—ã...")

    try:
        stickers_bytes = generate_sticker(prompt, style, background, quantity)

        for sticker in stickers_bytes:
            # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –±–∞–π—Ç—ã ‚Äî –Ω–µ URL!
            await message.answer_photo(photo=sticker.getvalue(), caption=prompt)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")